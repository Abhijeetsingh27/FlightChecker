{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\as999\\\\Desktop\\\\React\\\\Flight\\\\frontend\\\\src\\\\components\\\\AuthPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport './AuthPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [view, setView] = useState('sign-in'); // 'sign-in' | 'sign-up'\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n\n  // Email/Password Sign Up\n  const handleSignUp = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('');\n    try {\n      // 1. Sign up the user\n      const {\n        data: authData,\n        error: authError\n      } = await supabase.auth.signUp({\n        email,\n        password,\n        options: {\n          data: {\n            full_name: fullName,\n            email: email\n          }\n        }\n      });\n      if (authError) throw authError;\n      if (authData.user) {\n        // 2. Insert into profiles table\n        const {\n          error: profileError\n        } = await supabase.from('profiles').insert([{\n          id: authData.user.id,\n          full_name: fullName,\n          email: email,\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        }]);\n        if (profileError) throw profileError;\n\n        // 3. Insert into user_preferences table\n        const {\n          error: preferencesError\n        } = await supabase.from('user_preferences').insert([{\n          user_id: authData.user.id,\n          email_notifications: true,\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        }]);\n        if (preferencesError) throw preferencesError;\n        setMessage('Account created successfully! Please check your email for confirmation.');\n        setView('sign-in'); // Switch to sign-in view\n      }\n    } catch (error) {\n      console.error('Sign up error:', error);\n      setMessage(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Email/Password Sign In\n  const handleSignIn = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('');\n    try {\n      // 1. Sign in the user\n      const {\n        data: authData,\n        error: authError\n      } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n      if (authError) throw authError;\n      if (authData.user) {\n        // 2. Update last_login in profiles table\n        const {\n          error: updateError\n        } = await supabase.from('profiles').update({\n          last_login: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        }).eq('id', authData.user.id);\n        if (updateError) throw updateError;\n        console.log('Sign in successful:', authData);\n        setMessage('Signed in successfully!');\n        navigate('/');\n      }\n    } catch (error) {\n      console.error('Sign in error:', error);\n      setMessage(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: view === 'sign-in' ? 'Sign In' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), view === 'sign-in' && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSignIn,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Signing in...' : 'Sign In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have an account?\", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'blue',\n            cursor: 'pointer'\n          },\n          onClick: () => setView('sign-up'),\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), view === 'sign-up' && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSignUp,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Full Name\",\n        value: fullName,\n        onChange: e => setFullName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Creating account...' : 'Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'blue',\n            cursor: 'pointer'\n          },\n          onClick: () => setView('sign-in'),\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: message.includes('successfully') ? 'success-message' : 'error-message',\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthPage, \"CPtzhjOVOGzWsyq86hVv9iWtqwc=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","useNavigate","supabase","jsxDEV","_jsxDEV","AuthPage","_s","navigate","view","setView","email","setEmail","password","setPassword","fullName","setFullName","loading","setLoading","message","setMessage","handleSignUp","e","preventDefault","data","authData","error","authError","auth","signUp","options","full_name","user","profileError","from","insert","id","created_at","Date","toISOString","updated_at","preferencesError","user_id","email_notifications","console","handleSignIn","signInWithPassword","updateError","update","last_login","eq","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled","style","color","cursor","onClick","includes","_c","$RefreshReg$"],"sources":["C:/Users/as999/Desktop/React/Flight/frontend/src/components/AuthPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport './AuthPage.css';\n\nconst AuthPage = () => {\n  const navigate = useNavigate();\n  const [view, setView] = useState('sign-in'); // 'sign-in' | 'sign-up'\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n\n  // Email/Password Sign Up\n  const handleSignUp = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('');\n\n    try {\n      // 1. Sign up the user\n      const { data: authData, error: authError } = await supabase.auth.signUp({\n        email,\n        password,\n        options: { \n          data: { \n            full_name: fullName,\n            email: email\n          } \n        }\n      });\n\n      if (authError) throw authError;\n\n      if (authData.user) {\n        // 2. Insert into profiles table\n        const { error: profileError } = await supabase\n          .from('profiles')\n          .insert([\n            {\n              id: authData.user.id,\n              full_name: fullName,\n              email: email,\n              created_at: new Date().toISOString(),\n              updated_at: new Date().toISOString()\n            }\n          ]);\n\n        if (profileError) throw profileError;\n\n        // 3. Insert into user_preferences table\n        const { error: preferencesError } = await supabase\n          .from('user_preferences')\n          .insert([\n            {\n              user_id: authData.user.id,\n              email_notifications: true,\n              created_at: new Date().toISOString(),\n              updated_at: new Date().toISOString()\n            }\n          ]);\n\n        if (preferencesError) throw preferencesError;\n\n        setMessage('Account created successfully! Please check your email for confirmation.');\n        setView('sign-in'); // Switch to sign-in view\n      }\n    } catch (error) {\n      console.error('Sign up error:', error);\n      setMessage(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Email/Password Sign In\n  const handleSignIn = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('');\n\n    try {\n      // 1. Sign in the user\n      const { data: authData, error: authError } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n\n      if (authError) throw authError;\n\n      if (authData.user) {\n        // 2. Update last_login in profiles table\n        const { error: updateError } = await supabase\n          .from('profiles')\n          .update({ \n            last_login: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n          })\n          .eq('id', authData.user.id);\n\n        if (updateError) throw updateError;\n\n        console.log('Sign in successful:', authData);\n        setMessage('Signed in successfully!');\n        navigate('/');\n      }\n    } catch (error) {\n      console.error('Sign in error:', error);\n      setMessage(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"auth-page\">\n      <h2>{view === 'sign-in' ? 'Sign In' : 'Sign Up'}</h2>\n      {view === 'sign-in' && (\n        <form onSubmit={handleSignIn}>\n          <input \n            type=\"email\" \n            placeholder=\"Email\" \n            value={email} \n            onChange={e => setEmail(e.target.value)} \n            required \n          />\n          <input \n            type=\"password\" \n            placeholder=\"Password\" \n            value={password} \n            onChange={e => setPassword(e.target.value)} \n            required \n          />\n          <button type=\"submit\" disabled={loading}>\n            {loading ? 'Signing in...' : 'Sign In'}\n          </button>\n          <p>Don't have an account? \n            <span \n              style={{color:'blue',cursor:'pointer'}} \n              onClick={() => setView('sign-up')}\n            >\n              Sign Up\n            </span>\n          </p>\n        </form>\n      )}\n      {view === 'sign-up' && (\n        <form onSubmit={handleSignUp}>\n          <input \n            type=\"text\" \n            placeholder=\"Full Name\" \n            value={fullName} \n            onChange={e => setFullName(e.target.value)} \n            required \n          />\n          <input \n            type=\"email\" \n            placeholder=\"Email\" \n            value={email} \n            onChange={e => setEmail(e.target.value)} \n            required \n          />\n          <input \n            type=\"password\" \n            placeholder=\"Password\" \n            value={password} \n            onChange={e => setPassword(e.target.value)} \n            required \n          />\n          <button type=\"submit\" disabled={loading}>\n            {loading ? 'Creating account...' : 'Sign Up'}\n          </button>\n          <p>Already have an account? \n            <span \n              style={{color:'blue',cursor:'pointer'}} \n              onClick={() => setView('sign-in')}\n            >\n              Sign In\n            </span>\n          </p>\n        </form>\n      )}\n      {message && (\n        <p className={message.includes('successfully') ? 'success-message' : 'error-message'}>\n          {message}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default AuthPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}