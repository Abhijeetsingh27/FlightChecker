{"ast":null,"code":"import _objectSpread from\"C:/Users/as999/Desktop/React/Flight/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import amadeusService from'../services/amadeusService';import'../styles/FlightSearch.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FlightSearch=()=>{var _cabinClasses$find;const[searchParams,setSearchParams]=useState({originLocationCode:'',destinationLocationCode:'',departureDate:'',returnDate:'',adults:1,cabinClass:'ECONOMY'});const[isOneWay,setIsOneWay]=useState(false);const[flights,setFlights]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[showOriginDropdown,setShowOriginDropdown]=useState(false);const[showDestinationDropdown,setShowDestinationDropdown]=useState(false);const[searchTerm,setSearchTerm]=useState({origin:'',destination:''});// Comprehensive list of major airports worldwide\nconst airports={// North America\n'JFK':'John F. Kennedy International Airport, New York','LAX':'Los Angeles International Airport','SFO':'San Francisco International Airport','ORD':'O\\'Hare International Airport, Chicago','MIA':'Miami International Airport','YYZ':'Toronto Pearson International Airport','YVR':'Vancouver International Airport','MEX':'Benito Juárez International Airport, Mexico City','ATL':'Hartsfield–Jackson Atlanta International Airport','DFW':'Dallas/Fort Worth International Airport','DEN':'Denver International Airport','SEA':'Seattle–Tacoma International Airport','LAS':'Harry Reid International Airport, Las Vegas','PHX':'Phoenix Sky Harbor International Airport','CLT':'Charlotte Douglas International Airport','EWR':'Newark Liberty International Airport','BOS':'Logan International Airport, Boston','DTW':'Detroit Metropolitan Airport','PHL':'Philadelphia International Airport','LGA':'LaGuardia Airport, New York',// Europe\n'LHR':'Heathrow Airport, London','CDG':'Charles de Gaulle Airport, Paris','FRA':'Frankfurt Airport','AMS':'Amsterdam Airport Schiphol','MAD':'Adolfo Suárez Madrid–Barajas Airport','FCO':'Leonardo da Vinci International Airport, Rome','IST':'Istanbul Airport','ZRH':'Zurich Airport','VIE':'Vienna International Airport','CPH':'Copenhagen Airport','HEL':'Helsinki Airport','BCN':'Barcelona–El Prat Airport','MUC':'Munich Airport','LIS':'Lisbon Portela Airport','ARN':'Stockholm Arlanda Airport','OSL':'Oslo Airport, Gardermoen','BRU':'Brussels Airport','DUB':'Dublin Airport','MAN':'Manchester Airport','EDI':'Edinburgh Airport',// Asia\n'DXB':'Dubai International Airport','SIN':'Changi Airport, Singapore','HKG':'Hong Kong International Airport','NRT':'Narita International Airport, Tokyo','ICN':'Incheon International Airport, Seoul','DEL':'Indira Gandhi International Airport, Delhi','BOM':'Chhatrapati Shivaji Maharaj International Airport, Mumbai','BKK':'Suvarnabhumi Airport, Bangkok','KUL':'Kuala Lumpur International Airport','PEK':'Beijing Capital International Airport','PVG':'Shanghai Pudong International Airport','CAN':'Guangzhou Baiyun International Airport','CTU':'Chengdu Shuangliu International Airport','MNL':'Ninoy Aquino International Airport, Manila','CGK':'Soekarno–Hatta International Airport, Jakarta','TPE':'Taiwan Taoyuan International Airport','DPS':'Ngurah Rai International Airport, Bali','KHH':'Kaohsiung International Airport','MAA':'Chennai International Airport','BLR':'Kempegowda International Airport, Bangalore',// Oceania\n'SYD':'Sydney Airport','MEL':'Melbourne Airport','BNE':'Brisbane Airport','AKL':'Auckland Airport','PER':'Perth Airport','ADL':'Adelaide Airport','CNS':'Cairns Airport','HBA':'Hobart Airport','DRW':'Darwin International Airport','CHC':'Christchurch Airport',// Middle East\n'AUH':'Abu Dhabi International Airport','DOH':'Hamad International Airport, Doha','RUH':'King Khalid International Airport, Riyadh','JED':'King Abdulaziz International Airport, Jeddah','TLV':'Ben Gurion Airport, Tel Aviv','AMM':'Queen Alia International Airport, Amman','BEY':'Beirut–Rafic Hariri International Airport','MCT':'Muscat International Airport','KWI':'Kuwait International Airport','BAH':'Bahrain International Airport',// Africa\n'JNB':'O.R. Tambo International Airport, Johannesburg','CPT':'Cape Town International Airport','CAI':'Cairo International Airport','NBO':'Jomo Kenyatta International Airport, Nairobi','ADD':'Addis Ababa Bole International Airport','CMN':'Mohammed V International Airport, Casablanca','LAD':'Quatro de Fevereiro Airport, Luanda','LOS':'Murtala Muhammed International Airport, Lagos','ACC':'Kotoka International Airport, Accra','DSS':'Blaise Diagne International Airport, Dakar',// South America\n'GRU':'São Paulo/Guarulhos International Airport','EZE':'Ministro Pistarini International Airport, Buenos Aires','SCL':'Arturo Merino Benítez International Airport, Santiago','LIM':'Jorge Chávez International Airport, Lima','BOG':'El Dorado International Airport, Bogotá','UIO':'Mariscal Sucre International Airport, Quito','GIG':'Rio de Janeiro/Galeão International Airport','MVD':'Carrasco International Airport, Montevideo','ASU':'Silvio Pettirossi International Airport, Asunción','CCS':'Simón Bolívar International Airport, Caracas'};// Comprehensive list of major airlines\nconst airlineLogos={// North American Airlines\n'AA':'https://www.gstatic.com/flights/airline_logos/70px/AA.png',// American Airlines\n'DL':'https://www.gstatic.com/flights/airline_logos/70px/DL.png',// Delta Air Lines\n'UA':'https://www.gstatic.com/flights/airline_logos/70px/UA.png',// United Airlines\n'AC':'https://www.gstatic.com/flights/airline_logos/70px/AC.png',// Air Canada\n'WN':'https://www.gstatic.com/flights/airline_logos/70px/WN.png',// Southwest Airlines\n'B6':'https://www.gstatic.com/flights/airline_logos/70px/B6.png',// JetBlue Airways\n// European Airlines\n'BA':'https://www.gstatic.com/flights/airline_logos/70px/BA.png',// British Airways\n'LH':'https://www.gstatic.com/flights/airline_logos/70px/LH.png',// Lufthansa\n'AF':'https://www.gstatic.com/flights/airline_logos/70px/AF.png',// Air France\n'KL':'https://www.gstatic.com/flights/airline_logos/70px/KL.png',// KLM\n'IB':'https://www.gstatic.com/flights/airline_logos/70px/IB.png',// Iberia\n'LX':'https://www.gstatic.com/flights/airline_logos/70px/LX.png',// Swiss International\n'OS':'https://www.gstatic.com/flights/airline_logos/70px/OS.png',// Austrian Airlines\n'SK':'https://www.gstatic.com/flights/airline_logos/70px/SK.png',// SAS\n'TK':'https://www.gstatic.com/flights/airline_logos/70px/TK.png',// Turkish Airlines\n// Asian Airlines\n'SQ':'https://www.gstatic.com/flights/airline_logos/70px/SQ.png',// Singapore Airlines\n'AI':'https://www.gstatic.com/flights/airline_logos/70px/AI.png',// Air India\n'QF':'https://www.gstatic.com/flights/airline_logos/70px/QF.png',// Qantas\n'EK':'https://www.gstatic.com/flights/airline_logos/70px/EK.png',// Emirates\n'EY':'https://www.gstatic.com/flights/airline_logos/70px/EY.png',// Etihad Airways\n'QR':'https://www.gstatic.com/flights/airline_logos/70px/QR.png',// Qatar Airways\n'TG':'https://www.gstatic.com/flights/airline_logos/70px/TG.png',// Thai Airways\n'CX':'https://www.gstatic.com/flights/airline_logos/70px/CX.png',// Cathay Pacific\n'JL':'https://www.gstatic.com/flights/airline_logos/70px/JL.png',// Japan Airlines\n'NH':'https://www.gstatic.com/flights/airline_logos/70px/NH.png',// ANA\n'KE':'https://www.gstatic.com/flights/airline_logos/70px/KE.png',// Korean Air\n'MH':'https://www.gstatic.com/flights/airline_logos/70px/MH.png',// Malaysia Airlines\n'GA':'https://www.gstatic.com/flights/airline_logos/70px/GA.png',// Garuda Indonesia\n// Middle Eastern Airlines\n'SV':'https://www.gstatic.com/flights/airline_logos/70px/SV.png',// Saudia\n'WY':'https://www.gstatic.com/flights/airline_logos/70px/WY.png',// Oman Air\n'GF':'https://www.gstatic.com/flights/airline_logos/70px/GF.png',// Gulf Air\n// African Airlines\n'ET':'https://www.gstatic.com/flights/airline_logos/70px/ET.png',// Ethiopian Airlines\n'SA':'https://www.gstatic.com/flights/airline_logos/70px/SA.png',// South African Airways\n'MS':'https://www.gstatic.com/flights/airline_logos/70px/MS.png',// EgyptAir\n// South American Airlines\n'LA':'https://www.gstatic.com/flights/airline_logos/70px/LA.png',// LATAM Airlines\n'AV':'https://www.gstatic.com/flights/airline_logos/70px/AV.png',// Avianca\n'JJ':'https://www.gstatic.com/flights/airline_logos/70px/JJ.png',// LATAM Brasil\n'G3':'https://www.gstatic.com/flights/airline_logos/70px/G3.png'// GOL Linhas Aéreas\n};// Simplified cabin class options\nconst cabinClasses=[{value:'ECONOMY',label:'Economy'},{value:'PREMIUM_ECONOMY',label:'Premium Economy'},{value:'BUSINESS',label:'Business'},{value:'FIRST',label:'First'}];// Function to convert currency to INR (using a simple conversion rate for demo)\nconst convertToINR=(amount,currency)=>{const rates={'USD':83,'EUR':90,'GBP':105,'AED':22.5,'SGD':61.5};return Math.round(amount*(rates[currency]||1));};const handleInputChange=e=>{const{name,value}=e.target;setSearchParams(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value.toUpperCase()}));// Update search term for dropdowns\nif(name==='originLocationCode'){setSearchTerm(prev=>_objectSpread(_objectSpread({},prev),{},{origin:value.toUpperCase()}));setShowOriginDropdown(true);}else if(name==='destinationLocationCode'){setSearchTerm(prev=>_objectSpread(_objectSpread({},prev),{},{destination:value.toUpperCase()}));setShowDestinationDropdown(true);}};const handleTripTypeChange=e=>{const isOneWayTrip=e.target.value==='one-way';setIsOneWay(isOneWayTrip);if(isOneWayTrip){setSearchParams(prev=>_objectSpread(_objectSpread({},prev),{},{returnDate:''}));}};const handleAirportSelect=(code,type)=>{if(type==='origin'){setSearchParams(prev=>_objectSpread(_objectSpread({},prev),{},{originLocationCode:code}));setShowOriginDropdown(false);setSearchTerm(prev=>_objectSpread(_objectSpread({},prev),{},{origin:code}));}else{setSearchParams(prev=>_objectSpread(_objectSpread({},prev),{},{destinationLocationCode:code}));setShowDestinationDropdown(false);setSearchTerm(prev=>_objectSpread(_objectSpread({},prev),{},{destination:code}));}};const filteredAirports=type=>{const search=type==='origin'?searchTerm.origin:searchTerm.destination;return Object.entries(airports).filter(_ref=>{let[code,name]=_ref;return code.toLowerCase().includes(search.toLowerCase())||name.toLowerCase().includes(search.toLowerCase());}).slice(0,5);// Show only top 5 matches\n};const handleSearch=async e=>{e.preventDefault();setLoading(true);setError(null);if(!airports[searchParams.originLocationCode]){setError('Please select a valid origin airport');setLoading(false);return;}if(!airports[searchParams.destinationLocationCode]){setError('Please select a valid destination airport');setLoading(false);return;}try{const results=await amadeusService.searchFlights(searchParams.originLocationCode,searchParams.destinationLocationCode,searchParams.departureDate,isOneWay?null:searchParams.returnDate,searchParams.adults,searchParams.cabinClass);setFlights(results.data||[]);}catch(err){setError(err.message||'Error searching for flights. Please try again.');console.error(err);}finally{setLoading(false);}};const handleBooking=flight=>{const segment=flight.itineraries[0].segments[0];const airlineCode=segment.carrierCode;const departureDate=new Date(segment.departure.at).toISOString().split('T')[0];const returnDate=flight.itineraries[0].segments[1]?new Date(flight.itineraries[0].segments[1].departure.at).toISOString().split('T')[0]:null;// Map of airline booking URLs with proper parameters\nconst airlineBookingUrls={'AA':\"https://www.aa.com/booking/flights/from/\".concat(segment.departure.iataCode,\"/to/\").concat(segment.arrival.iataCode,\"/depart/\").concat(departureDate).concat(returnDate?\"/return/\".concat(returnDate):''),'DL':\"https://www.delta.com/flight-search/book-a-flight?fromCity=\".concat(segment.departure.iataCode,\"&toCity=\").concat(segment.arrival.iataCode,\"&fromDate=\").concat(departureDate).concat(returnDate?\"&toDate=\".concat(returnDate):''),'UA':\"https://www.united.com/ual/en/us/flight-search/book-a-flight?f=\".concat(segment.departure.iataCode,\"&t=\").concat(segment.arrival.iataCode,\"&d=\").concat(departureDate).concat(returnDate?\"&r=\".concat(returnDate):''),'BA':\"https://www.britishairways.com/travel/home/public/en_us/?from=\".concat(segment.departure.iataCode,\"&to=\").concat(segment.arrival.iataCode,\"&depart_date=\").concat(departureDate).concat(returnDate?\"&return_date=\".concat(returnDate):''),'LH':\"https://www.lufthansa.com/online/portal/lh/us/homepage?l=us&cid=1000078&departureDate=\".concat(departureDate,\"&origin=\").concat(segment.departure.iataCode,\"&destination=\").concat(segment.arrival.iataCode).concat(returnDate?\"&returnDate=\".concat(returnDate):''),'AF':\"https://wwws.airfrance.fr/searchEngine/flightSearch?departureDate=\".concat(departureDate,\"&origin=\").concat(segment.departure.iataCode,\"&destination=\").concat(segment.arrival.iataCode).concat(returnDate?\"&returnDate=\".concat(returnDate):''),'KL':\"https://www.klm.com/travel/us_en/plan_and_book/timetables/index.htm?from=\".concat(segment.departure.iataCode,\"&to=\").concat(segment.arrival.iataCode,\"&date=\").concat(departureDate).concat(returnDate?\"&returnDate=\".concat(returnDate):''),'SQ':\"https://www.singaporeair.com/en_UK/us/home#/book/bookflight?origin=\".concat(segment.departure.iataCode,\"&destination=\").concat(segment.arrival.iataCode,\"&departureDate=\").concat(departureDate).concat(returnDate?\"&returnDate=\".concat(returnDate):''),'EK':\"https://www.emirates.com/us/english/book/?f=\".concat(segment.departure.iataCode,\"&t=\").concat(segment.arrival.iataCode,\"&d=\").concat(departureDate).concat(returnDate?\"&r=\".concat(returnDate):''),'QR':\"https://www.qatarairways.com/en-us/homepage.html?from=\".concat(segment.departure.iataCode,\"&to=\").concat(segment.arrival.iataCode,\"&departureDate=\").concat(departureDate).concat(returnDate?\"&returnDate=\".concat(returnDate):''),'EY':\"https://www.etihad.com/en-us/plan-and-book/flights/?from=\".concat(segment.departure.iataCode,\"&to=\").concat(segment.arrival.iataCode,\"&date=\").concat(departureDate).concat(returnDate?\"&returnDate=\".concat(returnDate):''),'TK':\"https://www.turkishairlines.com/en-int/flights/from-\".concat(segment.departure.iataCode,\"-to-\").concat(segment.arrival.iataCode,\"/?date=\").concat(departureDate).concat(returnDate?\"&returnDate=\".concat(returnDate):''),'TG':\"https://www.thaiairways.com/en_TH/index.page?from=\".concat(segment.departure.iataCode,\"&to=\").concat(segment.arrival.iataCode,\"&departureDate=\").concat(departureDate).concat(returnDate?\"&returnDate=\".concat(returnDate):''),'CX':\"https://www.cathaypacific.com/cx/en_US.html?from=\".concat(segment.departure.iataCode,\"&to=\").concat(segment.arrival.iataCode,\"&date=\").concat(departureDate).concat(returnDate?\"&returnDate=\".concat(returnDate):''),'JL':\"https://www.jal.co.jp/en/booking/?from=\".concat(segment.departure.iataCode,\"&to=\").concat(segment.arrival.iataCode,\"&date=\").concat(departureDate).concat(returnDate?\"&returnDate=\".concat(returnDate):''),'NH':\"https://www.ana.co.jp/en/us/booking/?from=\".concat(segment.departure.iataCode,\"&to=\").concat(segment.arrival.iataCode,\"&date=\").concat(departureDate).concat(returnDate?\"&returnDate=\".concat(returnDate):''),'KE':\"https://www.koreanair.com/global/en.html?from=\".concat(segment.departure.iataCode,\"&to=\").concat(segment.arrival.iataCode,\"&date=\").concat(departureDate).concat(returnDate?\"&returnDate=\".concat(returnDate):''),'MH':\"https://www.malaysiaairlines.com/us/en.html?from=\".concat(segment.departure.iataCode,\"&to=\").concat(segment.arrival.iataCode,\"&date=\").concat(departureDate).concat(returnDate?\"&returnDate=\".concat(returnDate):''),'GA':\"https://www.garuda-indonesia.com/other-countries/en/index.page?from=\".concat(segment.departure.iataCode,\"&to=\").concat(segment.arrival.iataCode,\"&date=\").concat(departureDate).concat(returnDate?\"&returnDate=\".concat(returnDate):'')};// Get the booking URL for the airline\nconst bookingUrl=airlineBookingUrls[airlineCode];if(bookingUrl){// Open the airline's booking URL in a new tab\nwindow.open(bookingUrl,'_blank');}else{// If airline not found, open Google Flights with the flight details\nconst googleFlightsUrl=\"https://www.google.com/travel/flights/search?tfs=CAwQAhopEgoyMDI0LTAzLTIxag0IAhIJL20vMDJfMjAwcg0IAhIJL20vMDJfMjAwcgwIAhIIL20vMDJfMjAw&tfu=EgYIABABGAA&hl=en&q=flights%20\".concat(segment.departure.iataCode,\"%20to%20\").concat(segment.arrival.iataCode,\"%20on%20\").concat(departureDate);window.open(googleFlightsUrl,'_blank');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"flight-search-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Search Flights\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSearch,className:\"search-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"trip-type-selector\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"tripType\",value:\"round-trip\",checked:!isOneWay,onChange:handleTripTypeChange}),\"Round Trip\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"tripType\",value:\"one-way\",checked:isOneWay,onChange:handleTripTypeChange}),\"One Way\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"From:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"airport-input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"originLocationCode\",value:searchParams.originLocationCode,onChange:handleInputChange,placeholder:\"Search airport code or name\",required:true}),showOriginDropdown&&/*#__PURE__*/_jsx(\"div\",{className:\"airport-dropdown\",children:filteredAirports('origin').map(_ref2=>{let[code,name]=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"airport-option\",onClick:()=>handleAirportSelect(code,'origin'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"airport-code\",children:code}),/*#__PURE__*/_jsx(\"span\",{className:\"airport-name\",children:name})]},code);})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"To:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"airport-input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"destinationLocationCode\",value:searchParams.destinationLocationCode,onChange:handleInputChange,placeholder:\"Search airport code or name\",required:true}),showDestinationDropdown&&/*#__PURE__*/_jsx(\"div\",{className:\"airport-dropdown\",children:filteredAirports('destination').map(_ref3=>{let[code,name]=_ref3;return/*#__PURE__*/_jsxs(\"div\",{className:\"airport-option\",onClick:()=>handleAirportSelect(code,'destination'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"airport-code\",children:code}),/*#__PURE__*/_jsx(\"span\",{className:\"airport-name\",children:name})]},code);})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Departure Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"departureDate\",value:searchParams.departureDate,onChange:handleInputChange,min:new Date().toISOString().split('T')[0],required:true})]}),!isOneWay&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Return Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"returnDate\",value:searchParams.returnDate,onChange:handleInputChange,min:searchParams.departureDate||new Date().toISOString().split('T')[0],required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Number of Adults:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"adults\",value:searchParams.adults,onChange:handleInputChange,min:\"1\",max:\"9\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Cabin Class:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"cabin-class-selector\",children:cabinClasses.map(cabin=>/*#__PURE__*/_jsxs(\"label\",{className:\"cabin-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"cabinClass\",value:cabin.value,checked:searchParams.cabinClass===cabin.value,onChange:e=>setSearchParams(prev=>_objectSpread(_objectSpread({},prev),{},{cabinClass:e.target.value}))}),/*#__PURE__*/_jsx(\"span\",{className:\"cabin-label\",children:cabin.label})]},cabin.value))})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,children:loading?'Searching...':'Search Flights'})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),flights.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"flight-results\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Available Flights - \",(_cabinClasses$find=cabinClasses.find(c=>c.value===searchParams.cabinClass))===null||_cabinClasses$find===void 0?void 0:_cabinClasses$find.label]}),flights.map((flight,index)=>{var _segment$operating;const segment=flight.itineraries[0].segments[0];const airlineCode=segment.carrierCode;const duration=flight.itineraries[0].duration.replace('PT','').replace('H','h ').replace('M','m').trim();const priceInINR=convertToINR(flight.price.total,flight.price.currency);return/*#__PURE__*/_jsxs(\"div\",{className:\"flight-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flight-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"airline-info\",children:[/*#__PURE__*/_jsx(\"img\",{src:airlineLogos[airlineCode]||'https://www.gstatic.com/flights/airline_logos/70px/XX.png',alt:airlineCode,className:\"airline-logo\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"airline-details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"airline-name\",children:segment.carrierCode}),/*#__PURE__*/_jsx(\"span\",{className:\"flight-number\",children:segment.number})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flight-price\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"price-label\",children:\"Price\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"price-amount\",children:[\"\\u20B9\",priceInINR.toLocaleString()]}),/*#__PURE__*/_jsxs(\"span\",{className:\"price-original\",children:[flight.price.currency,\" \",flight.price.total]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flight-route\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"route-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"departure\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"time\",children:new Date(segment.departure.at).toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'})}),/*#__PURE__*/_jsx(\"span\",{className:\"date\",children:new Date(segment.departure.at).toLocaleDateString()}),/*#__PURE__*/_jsx(\"span\",{className:\"airport\",children:airports[segment.departure.iataCode]||segment.departure.iataCode}),/*#__PURE__*/_jsxs(\"span\",{className:\"terminal\",children:[\"Terminal \",segment.departure.terminal||'N/A']})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flight-duration\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"duration-line\"}),/*#__PURE__*/_jsx(\"span\",{className:\"duration\",children:duration}),/*#__PURE__*/_jsx(\"div\",{className:\"flight-type\",children:(_segment$operating=segment.operating)!==null&&_segment$operating!==void 0&&_segment$operating.carrierCode?'Operated by '+segment.operating.carrierCode:'Direct'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"arrival\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"time\",children:new Date(segment.arrival.at).toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'})}),/*#__PURE__*/_jsx(\"span\",{className:\"date\",children:new Date(segment.arrival.at).toLocaleDateString()}),/*#__PURE__*/_jsx(\"span\",{className:\"airport\",children:airports[segment.arrival.iataCode]||segment.arrival.iataCode}),/*#__PURE__*/_jsxs(\"span\",{className:\"terminal\",children:[\"Terminal \",segment.arrival.terminal||'N/A']})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flight-footer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flight-details\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"aircraft\",children:[\"Aircraft: \",segment.aircraft.code]}),/*#__PURE__*/_jsxs(\"span\",{className:\"class\",children:[\"Class: \",flight.travelerPricings[0].fareDetailsBySegment[0].cabin]}),/*#__PURE__*/_jsx(\"span\",{className:\"cabin-type\",children:searchParams.cabinClass})]}),/*#__PURE__*/_jsx(\"button\",{className:\"book-button\",onClick:()=>handleBooking(flight),children:\"Book Now\"})]})]},index);})]})]});};export default FlightSearch;","map":{"version":3,"names":["React","useState","amadeusService","jsx","_jsx","jsxs","_jsxs","FlightSearch","_cabinClasses$find","searchParams","setSearchParams","originLocationCode","destinationLocationCode","departureDate","returnDate","adults","cabinClass","isOneWay","setIsOneWay","flights","setFlights","loading","setLoading","error","setError","showOriginDropdown","setShowOriginDropdown","showDestinationDropdown","setShowDestinationDropdown","searchTerm","setSearchTerm","origin","destination","airports","airlineLogos","cabinClasses","value","label","convertToINR","amount","currency","rates","Math","round","handleInputChange","e","name","target","prev","_objectSpread","toUpperCase","handleTripTypeChange","isOneWayTrip","handleAirportSelect","code","type","filteredAirports","search","Object","entries","filter","_ref","toLowerCase","includes","slice","handleSearch","preventDefault","results","searchFlights","data","err","message","console","handleBooking","flight","segment","itineraries","segments","airlineCode","carrierCode","Date","departure","at","toISOString","split","airlineBookingUrls","concat","iataCode","arrival","bookingUrl","window","open","googleFlightsUrl","className","children","onSubmit","checked","onChange","placeholder","required","map","_ref2","onClick","_ref3","min","max","cabin","disabled","length","find","c","index","_segment$operating","duration","replace","trim","priceInINR","price","total","src","alt","number","toLocaleString","toLocaleTimeString","hour","minute","toLocaleDateString","terminal","operating","aircraft","travelerPricings","fareDetailsBySegment"],"sources":["C:/Users/as999/Desktop/React/Flight/frontend/src/components/FlightSearch.js"],"sourcesContent":["import React, { useState } from 'react';\nimport amadeusService from '../services/amadeusService';\nimport '../styles/FlightSearch.css';\n\nconst FlightSearch = () => {\n  const [searchParams, setSearchParams] = useState({\n    originLocationCode: '',\n    destinationLocationCode: '',\n    departureDate: '',\n    returnDate: '',\n    adults: 1,\n    cabinClass: 'ECONOMY'\n  });\n  const [isOneWay, setIsOneWay] = useState(false);\n  const [flights, setFlights] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [showOriginDropdown, setShowOriginDropdown] = useState(false);\n  const [showDestinationDropdown, setShowDestinationDropdown] = useState(false);\n  const [searchTerm, setSearchTerm] = useState({ origin: '', destination: '' });\n\n  // Comprehensive list of major airports worldwide\n  const airports = {\n    // North America\n    'JFK': 'John F. Kennedy International Airport, New York',\n    'LAX': 'Los Angeles International Airport',\n    'SFO': 'San Francisco International Airport',\n    'ORD': 'O\\'Hare International Airport, Chicago',\n    'MIA': 'Miami International Airport',\n    'YYZ': 'Toronto Pearson International Airport',\n    'YVR': 'Vancouver International Airport',\n    'MEX': 'Benito Juárez International Airport, Mexico City',\n    'ATL': 'Hartsfield–Jackson Atlanta International Airport',\n    'DFW': 'Dallas/Fort Worth International Airport',\n    'DEN': 'Denver International Airport',\n    'SEA': 'Seattle–Tacoma International Airport',\n    'LAS': 'Harry Reid International Airport, Las Vegas',\n    'PHX': 'Phoenix Sky Harbor International Airport',\n    'CLT': 'Charlotte Douglas International Airport',\n    'EWR': 'Newark Liberty International Airport',\n    'BOS': 'Logan International Airport, Boston',\n    'DTW': 'Detroit Metropolitan Airport',\n    'PHL': 'Philadelphia International Airport',\n    'LGA': 'LaGuardia Airport, New York',\n\n    // Europe\n    'LHR': 'Heathrow Airport, London',\n    'CDG': 'Charles de Gaulle Airport, Paris',\n    'FRA': 'Frankfurt Airport',\n    'AMS': 'Amsterdam Airport Schiphol',\n    'MAD': 'Adolfo Suárez Madrid–Barajas Airport',\n    'FCO': 'Leonardo da Vinci International Airport, Rome',\n    'IST': 'Istanbul Airport',\n    'ZRH': 'Zurich Airport',\n    'VIE': 'Vienna International Airport',\n    'CPH': 'Copenhagen Airport',\n    'HEL': 'Helsinki Airport',\n    'BCN': 'Barcelona–El Prat Airport',\n    'MUC': 'Munich Airport',\n    'LIS': 'Lisbon Portela Airport',\n    'ARN': 'Stockholm Arlanda Airport',\n    'OSL': 'Oslo Airport, Gardermoen',\n    'BRU': 'Brussels Airport',\n    'DUB': 'Dublin Airport',\n    'MAN': 'Manchester Airport',\n    'EDI': 'Edinburgh Airport',\n\n    // Asia\n    'DXB': 'Dubai International Airport',\n    'SIN': 'Changi Airport, Singapore',\n    'HKG': 'Hong Kong International Airport',\n    'NRT': 'Narita International Airport, Tokyo',\n    'ICN': 'Incheon International Airport, Seoul',\n    'DEL': 'Indira Gandhi International Airport, Delhi',\n    'BOM': 'Chhatrapati Shivaji Maharaj International Airport, Mumbai',\n    'BKK': 'Suvarnabhumi Airport, Bangkok',\n    'KUL': 'Kuala Lumpur International Airport',\n    'PEK': 'Beijing Capital International Airport',\n    'PVG': 'Shanghai Pudong International Airport',\n    'CAN': 'Guangzhou Baiyun International Airport',\n    'CTU': 'Chengdu Shuangliu International Airport',\n    'MNL': 'Ninoy Aquino International Airport, Manila',\n    'CGK': 'Soekarno–Hatta International Airport, Jakarta',\n    'TPE': 'Taiwan Taoyuan International Airport',\n    'DPS': 'Ngurah Rai International Airport, Bali',\n    'KHH': 'Kaohsiung International Airport',\n    'MAA': 'Chennai International Airport',\n    'BLR': 'Kempegowda International Airport, Bangalore',\n\n    // Oceania\n    'SYD': 'Sydney Airport',\n    'MEL': 'Melbourne Airport',\n    'BNE': 'Brisbane Airport',\n    'AKL': 'Auckland Airport',\n    'PER': 'Perth Airport',\n    'ADL': 'Adelaide Airport',\n    'CNS': 'Cairns Airport',\n    'HBA': 'Hobart Airport',\n    'DRW': 'Darwin International Airport',\n    'CHC': 'Christchurch Airport',\n\n    // Middle East\n    'AUH': 'Abu Dhabi International Airport',\n    'DOH': 'Hamad International Airport, Doha',\n    'RUH': 'King Khalid International Airport, Riyadh',\n    'JED': 'King Abdulaziz International Airport, Jeddah',\n    'TLV': 'Ben Gurion Airport, Tel Aviv',\n    'AMM': 'Queen Alia International Airport, Amman',\n    'BEY': 'Beirut–Rafic Hariri International Airport',\n    'MCT': 'Muscat International Airport',\n    'KWI': 'Kuwait International Airport',\n    'BAH': 'Bahrain International Airport',\n\n    // Africa\n    'JNB': 'O.R. Tambo International Airport, Johannesburg',\n    'CPT': 'Cape Town International Airport',\n    'CAI': 'Cairo International Airport',\n    'NBO': 'Jomo Kenyatta International Airport, Nairobi',\n    'ADD': 'Addis Ababa Bole International Airport',\n    'CMN': 'Mohammed V International Airport, Casablanca',\n    'LAD': 'Quatro de Fevereiro Airport, Luanda',\n    'LOS': 'Murtala Muhammed International Airport, Lagos',\n    'ACC': 'Kotoka International Airport, Accra',\n    'DSS': 'Blaise Diagne International Airport, Dakar',\n\n    // South America\n    'GRU': 'São Paulo/Guarulhos International Airport',\n    'EZE': 'Ministro Pistarini International Airport, Buenos Aires',\n    'SCL': 'Arturo Merino Benítez International Airport, Santiago',\n    'LIM': 'Jorge Chávez International Airport, Lima',\n    'BOG': 'El Dorado International Airport, Bogotá',\n    'UIO': 'Mariscal Sucre International Airport, Quito',\n    'GIG': 'Rio de Janeiro/Galeão International Airport',\n    'MVD': 'Carrasco International Airport, Montevideo',\n    'ASU': 'Silvio Pettirossi International Airport, Asunción',\n    'CCS': 'Simón Bolívar International Airport, Caracas'\n  };\n\n  // Comprehensive list of major airlines\n  const airlineLogos = {\n    // North American Airlines\n    'AA': 'https://www.gstatic.com/flights/airline_logos/70px/AA.png', // American Airlines\n    'DL': 'https://www.gstatic.com/flights/airline_logos/70px/DL.png', // Delta Air Lines\n    'UA': 'https://www.gstatic.com/flights/airline_logos/70px/UA.png', // United Airlines\n    'AC': 'https://www.gstatic.com/flights/airline_logos/70px/AC.png', // Air Canada\n    'WN': 'https://www.gstatic.com/flights/airline_logos/70px/WN.png', // Southwest Airlines\n    'B6': 'https://www.gstatic.com/flights/airline_logos/70px/B6.png', // JetBlue Airways\n\n    // European Airlines\n    'BA': 'https://www.gstatic.com/flights/airline_logos/70px/BA.png', // British Airways\n    'LH': 'https://www.gstatic.com/flights/airline_logos/70px/LH.png', // Lufthansa\n    'AF': 'https://www.gstatic.com/flights/airline_logos/70px/AF.png', // Air France\n    'KL': 'https://www.gstatic.com/flights/airline_logos/70px/KL.png', // KLM\n    'IB': 'https://www.gstatic.com/flights/airline_logos/70px/IB.png', // Iberia\n    'LX': 'https://www.gstatic.com/flights/airline_logos/70px/LX.png', // Swiss International\n    'OS': 'https://www.gstatic.com/flights/airline_logos/70px/OS.png', // Austrian Airlines\n    'SK': 'https://www.gstatic.com/flights/airline_logos/70px/SK.png', // SAS\n    'TK': 'https://www.gstatic.com/flights/airline_logos/70px/TK.png', // Turkish Airlines\n\n    // Asian Airlines\n    'SQ': 'https://www.gstatic.com/flights/airline_logos/70px/SQ.png', // Singapore Airlines\n    'AI': 'https://www.gstatic.com/flights/airline_logos/70px/AI.png', // Air India\n    'QF': 'https://www.gstatic.com/flights/airline_logos/70px/QF.png', // Qantas\n    'EK': 'https://www.gstatic.com/flights/airline_logos/70px/EK.png', // Emirates\n    'EY': 'https://www.gstatic.com/flights/airline_logos/70px/EY.png', // Etihad Airways\n    'QR': 'https://www.gstatic.com/flights/airline_logos/70px/QR.png', // Qatar Airways\n    'TG': 'https://www.gstatic.com/flights/airline_logos/70px/TG.png', // Thai Airways\n    'CX': 'https://www.gstatic.com/flights/airline_logos/70px/CX.png', // Cathay Pacific\n    'JL': 'https://www.gstatic.com/flights/airline_logos/70px/JL.png', // Japan Airlines\n    'NH': 'https://www.gstatic.com/flights/airline_logos/70px/NH.png', // ANA\n    'KE': 'https://www.gstatic.com/flights/airline_logos/70px/KE.png', // Korean Air\n    'MH': 'https://www.gstatic.com/flights/airline_logos/70px/MH.png', // Malaysia Airlines\n    'GA': 'https://www.gstatic.com/flights/airline_logos/70px/GA.png', // Garuda Indonesia\n\n    // Middle Eastern Airlines\n    'SV': 'https://www.gstatic.com/flights/airline_logos/70px/SV.png', // Saudia\n    'WY': 'https://www.gstatic.com/flights/airline_logos/70px/WY.png', // Oman Air\n    'GF': 'https://www.gstatic.com/flights/airline_logos/70px/GF.png', // Gulf Air\n\n    // African Airlines\n    'ET': 'https://www.gstatic.com/flights/airline_logos/70px/ET.png', // Ethiopian Airlines\n    'SA': 'https://www.gstatic.com/flights/airline_logos/70px/SA.png', // South African Airways\n    'MS': 'https://www.gstatic.com/flights/airline_logos/70px/MS.png', // EgyptAir\n\n    // South American Airlines\n    'LA': 'https://www.gstatic.com/flights/airline_logos/70px/LA.png', // LATAM Airlines\n    'AV': 'https://www.gstatic.com/flights/airline_logos/70px/AV.png', // Avianca\n    'JJ': 'https://www.gstatic.com/flights/airline_logos/70px/JJ.png', // LATAM Brasil\n    'G3': 'https://www.gstatic.com/flights/airline_logos/70px/G3.png'  // GOL Linhas Aéreas\n  };\n\n  // Simplified cabin class options\n  const cabinClasses = [\n    { value: 'ECONOMY', label: 'Economy' },\n    { value: 'PREMIUM_ECONOMY', label: 'Premium Economy' },\n    { value: 'BUSINESS', label: 'Business' },\n    { value: 'FIRST', label: 'First' }\n  ];\n\n  // Function to convert currency to INR (using a simple conversion rate for demo)\n  const convertToINR = (amount, currency) => {\n    const rates = {\n      'USD': 83,\n      'EUR': 90,\n      'GBP': 105,\n      'AED': 22.5,\n      'SGD': 61.5\n    };\n    return Math.round(amount * (rates[currency] || 1));\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setSearchParams(prev => ({\n      ...prev,\n      [name]: value.toUpperCase()\n    }));\n\n    // Update search term for dropdowns\n    if (name === 'originLocationCode') {\n      setSearchTerm(prev => ({ ...prev, origin: value.toUpperCase() }));\n      setShowOriginDropdown(true);\n    } else if (name === 'destinationLocationCode') {\n      setSearchTerm(prev => ({ ...prev, destination: value.toUpperCase() }));\n      setShowDestinationDropdown(true);\n    }\n  };\n\n  const handleTripTypeChange = (e) => {\n    const isOneWayTrip = e.target.value === 'one-way';\n    setIsOneWay(isOneWayTrip);\n    if (isOneWayTrip) {\n      setSearchParams(prev => ({ ...prev, returnDate: '' }));\n    }\n  };\n\n  const handleAirportSelect = (code, type) => {\n    if (type === 'origin') {\n      setSearchParams(prev => ({ ...prev, originLocationCode: code }));\n      setShowOriginDropdown(false);\n      setSearchTerm(prev => ({ ...prev, origin: code }));\n    } else {\n      setSearchParams(prev => ({ ...prev, destinationLocationCode: code }));\n      setShowDestinationDropdown(false);\n      setSearchTerm(prev => ({ ...prev, destination: code }));\n    }\n  };\n\n  const filteredAirports = (type) => {\n    const search = type === 'origin' ? searchTerm.origin : searchTerm.destination;\n    return Object.entries(airports)\n      .filter(([code, name]) => \n        code.toLowerCase().includes(search.toLowerCase()) || \n        name.toLowerCase().includes(search.toLowerCase())\n      )\n      .slice(0, 5); // Show only top 5 matches\n  };\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    if (!airports[searchParams.originLocationCode]) {\n      setError('Please select a valid origin airport');\n      setLoading(false);\n      return;\n    }\n\n    if (!airports[searchParams.destinationLocationCode]) {\n      setError('Please select a valid destination airport');\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const results = await amadeusService.searchFlights(\n        searchParams.originLocationCode,\n        searchParams.destinationLocationCode,\n        searchParams.departureDate,\n        isOneWay ? null : searchParams.returnDate,\n        searchParams.adults,\n        searchParams.cabinClass\n      );\n      setFlights(results.data || []);\n    } catch (err) {\n      setError(err.message || 'Error searching for flights. Please try again.');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleBooking = (flight) => {\n    const segment = flight.itineraries[0].segments[0];\n    const airlineCode = segment.carrierCode;\n    const departureDate = new Date(segment.departure.at).toISOString().split('T')[0];\n    const returnDate = flight.itineraries[0].segments[1] ? \n      new Date(flight.itineraries[0].segments[1].departure.at).toISOString().split('T')[0] : null;\n\n    // Map of airline booking URLs with proper parameters\n    const airlineBookingUrls = {\n      'AA': `https://www.aa.com/booking/flights/from/${segment.departure.iataCode}/to/${segment.arrival.iataCode}/depart/${departureDate}${returnDate ? `/return/${returnDate}` : ''}`,\n      'DL': `https://www.delta.com/flight-search/book-a-flight?fromCity=${segment.departure.iataCode}&toCity=${segment.arrival.iataCode}&fromDate=${departureDate}${returnDate ? `&toDate=${returnDate}` : ''}`,\n      'UA': `https://www.united.com/ual/en/us/flight-search/book-a-flight?f=${segment.departure.iataCode}&t=${segment.arrival.iataCode}&d=${departureDate}${returnDate ? `&r=${returnDate}` : ''}`,\n      'BA': `https://www.britishairways.com/travel/home/public/en_us/?from=${segment.departure.iataCode}&to=${segment.arrival.iataCode}&depart_date=${departureDate}${returnDate ? `&return_date=${returnDate}` : ''}`,\n      'LH': `https://www.lufthansa.com/online/portal/lh/us/homepage?l=us&cid=1000078&departureDate=${departureDate}&origin=${segment.departure.iataCode}&destination=${segment.arrival.iataCode}${returnDate ? `&returnDate=${returnDate}` : ''}`,\n      'AF': `https://wwws.airfrance.fr/searchEngine/flightSearch?departureDate=${departureDate}&origin=${segment.departure.iataCode}&destination=${segment.arrival.iataCode}${returnDate ? `&returnDate=${returnDate}` : ''}`,\n      'KL': `https://www.klm.com/travel/us_en/plan_and_book/timetables/index.htm?from=${segment.departure.iataCode}&to=${segment.arrival.iataCode}&date=${departureDate}${returnDate ? `&returnDate=${returnDate}` : ''}`,\n      'SQ': `https://www.singaporeair.com/en_UK/us/home#/book/bookflight?origin=${segment.departure.iataCode}&destination=${segment.arrival.iataCode}&departureDate=${departureDate}${returnDate ? `&returnDate=${returnDate}` : ''}`,\n      'EK': `https://www.emirates.com/us/english/book/?f=${segment.departure.iataCode}&t=${segment.arrival.iataCode}&d=${departureDate}${returnDate ? `&r=${returnDate}` : ''}`,\n      'QR': `https://www.qatarairways.com/en-us/homepage.html?from=${segment.departure.iataCode}&to=${segment.arrival.iataCode}&departureDate=${departureDate}${returnDate ? `&returnDate=${returnDate}` : ''}`,\n      'EY': `https://www.etihad.com/en-us/plan-and-book/flights/?from=${segment.departure.iataCode}&to=${segment.arrival.iataCode}&date=${departureDate}${returnDate ? `&returnDate=${returnDate}` : ''}`,\n      'TK': `https://www.turkishairlines.com/en-int/flights/from-${segment.departure.iataCode}-to-${segment.arrival.iataCode}/?date=${departureDate}${returnDate ? `&returnDate=${returnDate}` : ''}`,\n      'TG': `https://www.thaiairways.com/en_TH/index.page?from=${segment.departure.iataCode}&to=${segment.arrival.iataCode}&departureDate=${departureDate}${returnDate ? `&returnDate=${returnDate}` : ''}`,\n      'CX': `https://www.cathaypacific.com/cx/en_US.html?from=${segment.departure.iataCode}&to=${segment.arrival.iataCode}&date=${departureDate}${returnDate ? `&returnDate=${returnDate}` : ''}`,\n      'JL': `https://www.jal.co.jp/en/booking/?from=${segment.departure.iataCode}&to=${segment.arrival.iataCode}&date=${departureDate}${returnDate ? `&returnDate=${returnDate}` : ''}`,\n      'NH': `https://www.ana.co.jp/en/us/booking/?from=${segment.departure.iataCode}&to=${segment.arrival.iataCode}&date=${departureDate}${returnDate ? `&returnDate=${returnDate}` : ''}`,\n      'KE': `https://www.koreanair.com/global/en.html?from=${segment.departure.iataCode}&to=${segment.arrival.iataCode}&date=${departureDate}${returnDate ? `&returnDate=${returnDate}` : ''}`,\n      'MH': `https://www.malaysiaairlines.com/us/en.html?from=${segment.departure.iataCode}&to=${segment.arrival.iataCode}&date=${departureDate}${returnDate ? `&returnDate=${returnDate}` : ''}`,\n      'GA': `https://www.garuda-indonesia.com/other-countries/en/index.page?from=${segment.departure.iataCode}&to=${segment.arrival.iataCode}&date=${departureDate}${returnDate ? `&returnDate=${returnDate}` : ''}`\n    };\n\n    // Get the booking URL for the airline\n    const bookingUrl = airlineBookingUrls[airlineCode];\n    \n    if (bookingUrl) {\n      // Open the airline's booking URL in a new tab\n      window.open(bookingUrl, '_blank');\n    } else {\n      // If airline not found, open Google Flights with the flight details\n      const googleFlightsUrl = `https://www.google.com/travel/flights/search?tfs=CAwQAhopEgoyMDI0LTAzLTIxag0IAhIJL20vMDJfMjAwcg0IAhIJL20vMDJfMjAwcgwIAhIIL20vMDJfMjAw&tfu=EgYIABABGAA&hl=en&q=flights%20${segment.departure.iataCode}%20to%20${segment.arrival.iataCode}%20on%20${departureDate}`;\n      window.open(googleFlightsUrl, '_blank');\n    }\n  };\n\n  return (\n    <div className=\"flight-search-container\">\n      <h2>Search Flights</h2>\n      <form onSubmit={handleSearch} className=\"search-form\">\n        <div className=\"trip-type-selector\">\n          <label>\n            <input\n              type=\"radio\"\n              name=\"tripType\"\n              value=\"round-trip\"\n              checked={!isOneWay}\n              onChange={handleTripTypeChange}\n            />\n            Round Trip\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"tripType\"\n              value=\"one-way\"\n              checked={isOneWay}\n              onChange={handleTripTypeChange}\n            />\n            One Way\n          </label>\n        </div>\n\n        <div className=\"form-group\">\n          <label>From:</label>\n          <div className=\"airport-input-container\">\n            <input\n              type=\"text\"\n              name=\"originLocationCode\"\n              value={searchParams.originLocationCode}\n              onChange={handleInputChange}\n              placeholder=\"Search airport code or name\"\n              required\n            />\n            {showOriginDropdown && (\n              <div className=\"airport-dropdown\">\n                {filteredAirports('origin').map(([code, name]) => (\n                  <div\n                    key={code}\n                    className=\"airport-option\"\n                    onClick={() => handleAirportSelect(code, 'origin')}\n                  >\n                    <span className=\"airport-code\">{code}</span>\n                    <span className=\"airport-name\">{name}</span>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <label>To:</label>\n          <div className=\"airport-input-container\">\n            <input\n              type=\"text\"\n              name=\"destinationLocationCode\"\n              value={searchParams.destinationLocationCode}\n              onChange={handleInputChange}\n              placeholder=\"Search airport code or name\"\n              required\n            />\n            {showDestinationDropdown && (\n              <div className=\"airport-dropdown\">\n                {filteredAirports('destination').map(([code, name]) => (\n                  <div\n                    key={code}\n                    className=\"airport-option\"\n                    onClick={() => handleAirportSelect(code, 'destination')}\n                  >\n                    <span className=\"airport-code\">{code}</span>\n                    <span className=\"airport-name\">{name}</span>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Departure Date:</label>\n          <input\n            type=\"date\"\n            name=\"departureDate\"\n            value={searchParams.departureDate}\n            onChange={handleInputChange}\n            min={new Date().toISOString().split('T')[0]}\n            required\n          />\n        </div>\n\n        {!isOneWay && (\n          <div className=\"form-group\">\n            <label>Return Date:</label>\n            <input\n              type=\"date\"\n              name=\"returnDate\"\n              value={searchParams.returnDate}\n              onChange={handleInputChange}\n              min={searchParams.departureDate || new Date().toISOString().split('T')[0]}\n              required\n            />\n          </div>\n        )}\n\n        <div className=\"form-group\">\n          <label>Number of Adults:</label>\n          <input\n            type=\"number\"\n            name=\"adults\"\n            value={searchParams.adults}\n            onChange={handleInputChange}\n            min=\"1\"\n            max=\"9\"\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Cabin Class:</label>\n          <div className=\"cabin-class-selector\">\n            {cabinClasses.map((cabin) => (\n              <label key={cabin.value} className=\"cabin-option\">\n                <input\n                  type=\"radio\"\n                  name=\"cabinClass\"\n                  value={cabin.value}\n                  checked={searchParams.cabinClass === cabin.value}\n                  onChange={(e) => setSearchParams(prev => ({ ...prev, cabinClass: e.target.value }))}\n                />\n                <span className=\"cabin-label\">{cabin.label}</span>\n              </label>\n            ))}\n          </div>\n        </div>\n\n        <button type=\"submit\" disabled={loading}>\n          {loading ? 'Searching...' : 'Search Flights'}\n        </button>\n      </form>\n\n      {error && <div className=\"error-message\">{error}</div>}\n\n      {flights.length > 0 && (\n        <div className=\"flight-results\">\n          <h3>Available Flights - {cabinClasses.find(c => c.value === searchParams.cabinClass)?.label}</h3>\n          {flights.map((flight, index) => {\n            const segment = flight.itineraries[0].segments[0];\n            const airlineCode = segment.carrierCode;\n            const duration = flight.itineraries[0].duration\n              .replace('PT', '')\n              .replace('H', 'h ')\n              .replace('M', 'm')\n              .trim();\n            const priceInINR = convertToINR(flight.price.total, flight.price.currency);\n\n            return (\n              <div key={index} className=\"flight-card\">\n                <div className=\"flight-header\">\n                  <div className=\"airline-info\">\n                    <img \n                      src={airlineLogos[airlineCode] || 'https://www.gstatic.com/flights/airline_logos/70px/XX.png'} \n                      alt={airlineCode}\n                      className=\"airline-logo\"\n                    />\n                    <div className=\"airline-details\">\n                      <span className=\"airline-name\">{segment.carrierCode}</span>\n                      <span className=\"flight-number\">{segment.number}</span>\n                    </div>\n                  </div>\n                  <div className=\"flight-price\">\n                    <span className=\"price-label\">Price</span>\n                    <span className=\"price-amount\">₹{priceInINR.toLocaleString()}</span>\n                    <span className=\"price-original\">{flight.price.currency} {flight.price.total}</span>\n                  </div>\n                </div>\n\n                <div className=\"flight-route\">\n                  <div className=\"route-details\">\n                    <div className=\"departure\">\n                      <span className=\"time\">{new Date(segment.departure.at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</span>\n                      <span className=\"date\">{new Date(segment.departure.at).toLocaleDateString()}</span>\n                      <span className=\"airport\">{airports[segment.departure.iataCode] || segment.departure.iataCode}</span>\n                      <span className=\"terminal\">Terminal {segment.departure.terminal || 'N/A'}</span>\n                    </div>\n\n                    <div className=\"flight-duration\">\n                      <div className=\"duration-line\"></div>\n                      <span className=\"duration\">{duration}</span>\n                      <div className=\"flight-type\">{segment.operating?.carrierCode ? 'Operated by ' + segment.operating.carrierCode : 'Direct'}</div>\n                    </div>\n\n                    <div className=\"arrival\">\n                      <span className=\"time\">{new Date(segment.arrival.at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</span>\n                      <span className=\"date\">{new Date(segment.arrival.at).toLocaleDateString()}</span>\n                      <span className=\"airport\">{airports[segment.arrival.iataCode] || segment.arrival.iataCode}</span>\n                      <span className=\"terminal\">Terminal {segment.arrival.terminal || 'N/A'}</span>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"flight-footer\">\n                  <div className=\"flight-details\">\n                    <span className=\"aircraft\">Aircraft: {segment.aircraft.code}</span>\n                    <span className=\"class\">Class: {flight.travelerPricings[0].fareDetailsBySegment[0].cabin}</span>\n                    <span className=\"cabin-type\">{searchParams.cabinClass}</span>\n                  </div>\n                  <button \n                    className=\"book-button\"\n                    onClick={() => handleBooking(flight)}\n                  >\n                    Book Now\n                  </button>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FlightSearch; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}