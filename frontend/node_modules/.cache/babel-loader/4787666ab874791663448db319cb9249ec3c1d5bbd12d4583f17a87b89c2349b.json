{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{supabase}from'../supabaseClient';import'./AuthPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AuthPage=()=>{const navigate=useNavigate();const[view,setView]=useState('sign-in');// 'sign-in' | 'sign-up'\nconst[email,setEmail]=useState('');const[password,setPassword]=useState('');const[fullName,setFullName]=useState('');const[loading,setLoading]=useState(false);const[message,setMessage]=useState('');// Email/Password Sign Up\nconst handleSignUp=async e=>{e.preventDefault();setLoading(true);setMessage('');try{// 1. Sign up the user\nconst{data:authData,error:authError}=await supabase.auth.signUp({email,password,options:{data:{full_name:fullName,email:email}}});if(authError)throw authError;if(authData.user){// 2. Insert into profiles table\nconst{error:profileError}=await supabase.from('profiles').insert([{id:authData.user.id,full_name:fullName,email:email,created_at:new Date().toISOString(),updated_at:new Date().toISOString()}]);if(profileError)throw profileError;setMessage('Account created successfully! Please check your email for confirmation.');setView('sign-in');// Switch to sign-in view\n}}catch(error){console.error('Sign up error:',error);setMessage(error.message);}finally{setLoading(false);}};// Email/Password Sign In\nconst handleSignIn=async e=>{e.preventDefault();setLoading(true);setMessage('');try{// 1. Sign in the user\nconst{data:authData,error:authError}=await supabase.auth.signInWithPassword({email,password});if(authError)throw authError;if(authData.user){// 2. Update last_login in profiles table\nconst{error:updateError}=await supabase.from('profiles').update({last_login:new Date().toISOString(),updated_at:new Date().toISOString()}).eq('id',authData.user.id);if(updateError)throw updateError;console.log('Sign in successful:',authData);setMessage('Signed in successfully!');navigate('/');}}catch(error){console.error('Sign in error:',error);setMessage(error.message);}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"auth-page\",children:[/*#__PURE__*/_jsx(\"h2\",{children:view==='sign-in'?'Sign In':'Sign Up'}),view==='sign-in'&&/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSignIn,children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:email,onChange:e=>setEmail(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,children:loading?'Signing in...':'Sign In'}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Don't have an account?\",/*#__PURE__*/_jsx(\"span\",{style:{color:'blue',cursor:'pointer'},onClick:()=>setView('sign-up'),children:\"Sign Up\"})]})]}),view==='sign-up'&&/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSignUp,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Full Name\",value:fullName,onChange:e=>setFullName(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:email,onChange:e=>setEmail(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,children:loading?'Creating account...':'Sign Up'}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Already have an account?\",/*#__PURE__*/_jsx(\"span\",{style:{color:'blue',cursor:'pointer'},onClick:()=>setView('sign-in'),children:\"Sign In\"})]})]}),message&&/*#__PURE__*/_jsx(\"p\",{className:message.includes('successfully')?'success-message':'error-message',children:message})]});};export default AuthPage;","map":{"version":3,"names":["React","useState","useNavigate","supabase","jsx","_jsx","jsxs","_jsxs","AuthPage","navigate","view","setView","email","setEmail","password","setPassword","fullName","setFullName","loading","setLoading","message","setMessage","handleSignUp","e","preventDefault","data","authData","error","authError","auth","signUp","options","full_name","user","profileError","from","insert","id","created_at","Date","toISOString","updated_at","console","handleSignIn","signInWithPassword","updateError","update","last_login","eq","log","className","children","onSubmit","type","placeholder","value","onChange","target","required","disabled","style","color","cursor","onClick","includes"],"sources":["C:/Users/as999/Desktop/React/Flight/frontend/src/components/AuthPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport './AuthPage.css';\n\nconst AuthPage = () => {\n  const navigate = useNavigate();\n  const [view, setView] = useState('sign-in'); // 'sign-in' | 'sign-up'\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n\n  // Email/Password Sign Up\n  const handleSignUp = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('');\n\n    try {\n      // 1. Sign up the user\n      const { data: authData, error: authError } = await supabase.auth.signUp({\n        email,\n        password,\n        options: { \n          data: { \n            full_name: fullName,\n            email: email\n          } \n        }\n      });\n\n      if (authError) throw authError;\n\n      if (authData.user) {\n        // 2. Insert into profiles table\n        const { error: profileError } = await supabase\n          .from('profiles')\n          .insert([\n            {\n              id: authData.user.id,\n              full_name: fullName,\n              email: email,\n              created_at: new Date().toISOString(),\n              updated_at: new Date().toISOString()\n            }\n          ]);\n\n        if (profileError) throw profileError;\n\n        setMessage('Account created successfully! Please check your email for confirmation.');\n        setView('sign-in'); // Switch to sign-in view\n      }\n    } catch (error) {\n      console.error('Sign up error:', error);\n      setMessage(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Email/Password Sign In\n  const handleSignIn = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('');\n\n    try {\n      // 1. Sign in the user\n      const { data: authData, error: authError } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n\n      if (authError) throw authError;\n\n      if (authData.user) {\n        // 2. Update last_login in profiles table\n        const { error: updateError } = await supabase\n          .from('profiles')\n          .update({ \n            last_login: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n          })\n          .eq('id', authData.user.id);\n\n        if (updateError) throw updateError;\n\n        console.log('Sign in successful:', authData);\n        setMessage('Signed in successfully!');\n        navigate('/');\n      }\n    } catch (error) {\n      console.error('Sign in error:', error);\n      setMessage(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"auth-page\">\n      <h2>{view === 'sign-in' ? 'Sign In' : 'Sign Up'}</h2>\n      {view === 'sign-in' && (\n        <form onSubmit={handleSignIn}>\n          <input \n            type=\"email\" \n            placeholder=\"Email\" \n            value={email} \n            onChange={e => setEmail(e.target.value)} \n            required \n          />\n          <input \n            type=\"password\" \n            placeholder=\"Password\" \n            value={password} \n            onChange={e => setPassword(e.target.value)} \n            required \n          />\n          <button type=\"submit\" disabled={loading}>\n            {loading ? 'Signing in...' : 'Sign In'}\n          </button>\n          <p>Don't have an account? \n            <span \n              style={{color:'blue',cursor:'pointer'}} \n              onClick={() => setView('sign-up')}\n            >\n              Sign Up\n            </span>\n          </p>\n        </form>\n      )}\n      {view === 'sign-up' && (\n        <form onSubmit={handleSignUp}>\n          <input \n            type=\"text\" \n            placeholder=\"Full Name\" \n            value={fullName} \n            onChange={e => setFullName(e.target.value)} \n            required \n          />\n          <input \n            type=\"email\" \n            placeholder=\"Email\" \n            value={email} \n            onChange={e => setEmail(e.target.value)} \n            required \n          />\n          <input \n            type=\"password\" \n            placeholder=\"Password\" \n            value={password} \n            onChange={e => setPassword(e.target.value)} \n            required \n          />\n          <button type=\"submit\" disabled={loading}>\n            {loading ? 'Creating account...' : 'Sign Up'}\n          </button>\n          <p>Already have an account? \n            <span \n              style={{color:'blue',cursor:'pointer'}} \n              onClick={() => setView('sign-in')}\n            >\n              Sign In\n            </span>\n          </p>\n        </form>\n      )}\n      {message && (\n        <p className={message.includes('successfully') ? 'success-message' : 'error-message'}>\n          {message}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default AuthPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}